name: Build and Release Windows App

on:
  push:
    tags:
      - 'v*.*.*' # 当你推送一个以 "v" 开头的标签时触发，例如 v1.0.0, v1.0.1

jobs:
  build_windows:
    runs-on: windows-latest # 使用 Windows Runner 来构建 Windows 应用

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4 # 检出你的代码

      - name: Set up Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable' # 使用 stable 通道
          flutter-version: '3.x' # 可以指定具体版本，例如 '3.19.0' 或 '3.x' 获取最新稳定版

      - name: Get Flutter Dependencies
        run: flutter pub get

      # - name: Enable Windows Desktop Support
      #   run: flutter config --enable-windows-desktop

      - name: Build Windows Release
        run: flutter build windows --release # 构建 Windows 发布版

      - name: Create Zip Archive of Windows Build
        run: |
          $sourceDir = ".\build\windows\x64\runner\Release"
          $zipFileName = "herolist_flutter_windows_${{ github.ref_name }}.zip"
          Compress-Archive -Path $sourceDir -DestinationPath $zipFileName -Force
        shell: pwsh # 使用 PowerShell 来执行压缩命令
        id: create_zip # 给这个步骤一个 ID，以便后续引用其输出

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1 # 使用一个第三方 Action 来上传 Release Assets
        if: startsWith(github.ref, 'refs/tags/') # 确保只在 tag 推送时运行此步骤
        with:
          files: ${{ steps.create_zip.outputs.path }} # 从上一步获取压缩包的路径
          name: Release ${{ github.ref_name }} # Release 的名称
          tag_name: ${{ github.ref }} # Release 的标签
          body: | # Release 的描述
            自动构建的 Windows 程序：Herolist Flutter
            版本: ${{ github.ref_name }}
          draft: false # 是否作为草稿发布
          prerelease: false # 是否作为预发布版本
          generate_release_notes: true # 自动生成 Release Notes
